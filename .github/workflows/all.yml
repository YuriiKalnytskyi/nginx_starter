name: all CI

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        required: true
        description: Select a stage
        default: dev
        options:
          - dev
          - test

defaults:
  run:
    working-directory: ./

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Greet
        run: |
          echo "Choice is ${{ github.event.inputs.choice }}" / ${{ inputs.choice }}

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./package-lock.json
      - run: npm ci
      - name: Lint client code
        run: |
          npm run format:check --if-present
          npm run lint:check --if-present
      - name: Lint server code
        run: |
          cd ./server
          npm run format:check --if-present
          npm run lint:check --if-present

  client:
    needs:
      - lint
      - prepare

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./package-lock.json
      - run: npm ci

  server:
    needs:
      - lint
      - prepare

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./package-lock.json
      - run: npm ci

  deploy:
    needs:
      - client
      - server

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Compose
        run: |
          sudo rm /usr/local/bin/docker-compose
          curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Build and run Docker Compose
        run: |
          docker-compose up -d
